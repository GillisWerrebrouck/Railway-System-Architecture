apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: route-db
    name: route-db
  spec:
    ports:
      - port: 7687
    selector:
      io.kompose.service: route-db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: staff-db
    name: staff-db
  spec:
    ports:
      - port: 27017
    selector:
      io.kompose.service: staff-db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: train-db
    name: train-db
  spec:
    ports:
      - port: 27017
    selector:
      io.kompose.service: train-db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: maintenance-db
    name: maintenance-db
  spec:
    ports:
      - port: 3306
    selector:
      io.kompose.service: maintenance-db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: station-db
    name: station-db
  spec:
    ports:
      - port: 3306
    selector:
      io.kompose.service: station-db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: delay-request-db
    name: delay-request-db
  spec:
    ports:
      - port: 6379
    selector:
      io.kompose.service: delay-request-db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: ticket-sale-db
    name: ticket-sale-db
  spec:
    ports:
      - port: 3306
    selector:
      io.kompose.service: ticket-sale-db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: ticket-validation-db
    name: ticket-validation-db
  spec:
    ports:
      - port: 3306
    selector:
      io.kompose.service: ticket-validation-db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: timetable-db
    name: timetable-db
  spec:
    ports:
      - port: 3306
    selector:
      io.kompose.service: timetable-db
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: apigateway
    name: apigateway
  spec:
    ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
    selector:
      io.kompose.service: apigateway
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: zookeeper-container
    name: zookeeper-container
  spec:
    ports:
    - name: "2181"
      port: 2181
      targetPort: 2181
    selector:
      io.kompose.service: zookeeper-container
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: kafka-container
    name: kafka-container
  spec:
    ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
    selector:
      io.kompose.service: kafka-container
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    ports:
    - name: "80"
      port: 80
      targetPort: 80
    selector:
      io.kompose.service: frontend
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: apigateway
    name: apigateway
  spec:
    selector:
      matchLabels:
        io.kompose.service: apigateway
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: apigateway
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-api-gateway-service
          name: apigateway
          ports:
          - containerPort: 8080
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: apigateway-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-api-gateway/target
          name: apigateway-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: delay-request-db
    name: delay-request-db
  spec:
    selector:
      matchLabels:
        io.kompose.service: delay-request-db
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: delay-request-db
      spec:
        containers:
        - image: redis
          name: delay-request-db
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: delay-service
    name: delay-service
  spec:
    selector:
      matchLabels:
        io.kompose.service: delay-service
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: delay-service
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-delay-service
          name: delay-service
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: delay-service-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-delay/target
          name: delay-service-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: frontend
    name: frontend
  spec:
    selector:
      matchLabels:
        io.kompose.service: frontend
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: frontend
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-frontend
          name: frontend
          ports:
          - containerPort: 80
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: frontend-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-frontend/target
          name: frontend-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: kafka-container
    name: kafka-container
  spec:
    selector:
      matchLabels:
        io.kompose.service: kafka-container
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: kafka-container
      spec:
        containers:
        - env:
          - name: KAFKA_ADVERTISED_LISTENERS
            value: PLAINTEXT://kafka-container:9092
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
            value: "1"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: zookeeper-container:2181
          image: confluentinc/cp-kafka
          name: kafka-container
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: maintenance-db
    name: maintenance-db
  spec:
    selector:
      matchLabels:
        io.kompose.service: maintenance-db
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: maintenance-db
      spec:
        containers:
        - args:
          - --default-authentication-plugin=mysql_native_password
          env:
          - name: MYSQL_DATABASE
            value: Maintenance
          - name: MYSQL_ROOT_PASSWORD
            value: maintenancedatabase
          ports:
            - containerPort: 3306
          image: mysql:5.7
          name: maintenance-db
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: maintenance-service
    name: maintenance-service
  spec:
    selector:
      matchLabels:
        io.kompose.service: maintenance-service
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: maintenance-service
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-maintenance-service
          name: maintenance-service
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: maintenance-service-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-maintenance/target
          name: maintenance-service-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: route-db
    name: route-db
  spec:
    selector:
      matchLabels:
        io.kompose.service: route-db
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: route-db
      spec:
        containers:
        - env:
          - name: NEO4J_AUTH
            value: neo4j/route
          image: neo4j:3.5.6
          name: route-db
          ports:
          - containerPort: 7687
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: route-service
    name: route-service
  spec:
    selector:
      matchLabels:
        io.kompose.service: route-service
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: route-service
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-route-management-service
          name: route-service
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: route-service-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-route-management/target
          name: route-service-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: staff-db
    name: staff-db
  spec:
    selector:
      matchLabels:
        io.kompose.service: staff-db
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: staff-db
      spec:
        containers:
        - image: mongo
          name: staff-db
          ports:
            - containerPort: 27017
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: staff-service
    name: staff-service
  spec:
    selector:
      matchLabels:
        io.kompose.service: staff-service
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: staff-service
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-staff-service
          name: staff-service
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: staff-service-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-staff/target
          name: staff-service-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: station-db
    name: station-db
  spec:
    selector:
      matchLabels:
        io.kompose.service: station-db
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: station-db
      spec:
        containers:
        - args:
          - --default-authentication-plugin=mysql_native_password
          env:
          - name: MYSQL_DATABASE
            value: Station
          - name: MYSQL_ROOT_PASSWORD
            value: stationdatabase
          ports:
            - containerPort: 3306
          image: mysql:5.7
          name: station-db
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: station-service
    name: station-service
  spec:
    selector:
      matchLabels:
        io.kompose.service: station-service
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: station-service
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-station-service
          name: station-service
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: station-service-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-station/target
          name: station-service-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: ticket-sale-db
    name: ticket-sale-db
  spec:
    selector:
      matchLabels:
        io.kompose.service: ticket-sale-db
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: ticket-sale-db
      spec:
        containers:
        - args:
          - --default-authentication-plugin=mysql_native_password
          env:
          - name: MYSQL_DATABASE
            value: TicketSale
          - name: MYSQL_ROOT_PASSWORD
            value: ticketsaledatabase
          ports:
            - containerPort: 3306
          image: mysql:5.7
          name: ticket-sale-db
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: ticket-sale-service
    name: ticket-sale-service
  spec:
    selector:
      matchLabels:
        io.kompose.service: ticket-sale-service
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: ticket-sale-service
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-ticket-sale-service
          name: ticket-sale-service
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: ticket-sale-service-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-ticket-sale/target
          name: ticket-sale-service-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: ticket-validation-db
    name: ticket-validation-db
  spec:
    selector:
      matchLabels:
        io.kompose.service: ticket-validation-db
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: ticket-validation-db
      spec:
        containers:
        - args:
          - --default-authentication-plugin=mysql_native_password
          env:
          - name: MYSQL_DATABASE
            value: TicketValidation
          - name: MYSQL_ROOT_PASSWORD
            value: ticketvalidationdatabase
          ports:
            - containerPort: 3306
          image: mysql:5.7
          name: ticket-validation-db
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: ticket-validation-service
    name: ticket-validation-service
  spec:
    selector:
      matchLabels:
        io.kompose.service: ticket-validation-service
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: ticket-validation-service
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-ticket-validation-service
          name: ticket-validation-service
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: ticket-validation-service-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-ticket-validation/target
          name: ticket-validation-service-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: timetable-db
    name: timetable-db
  spec:
    selector:
      matchLabels:
        io.kompose.service: timetable-db
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: timetable-db
      spec:
        containers:
        - args:
          - --default-authentication-plugin=mysql_native_password
          env:
          - name: MYSQL_DATABASE
            value: Timetable
          - name: MYSQL_ROOT_PASSWORD
            value: timetabledatabase
          ports:
            - containerPort: 3306
          image: mysql:5.7
          name: timetable-db
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: timetable-service
    name: timetable-service
  spec:
    selector:
      matchLabels:
        io.kompose.service: timetable-service
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: timetable-service
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-timetable-service
          name: timetable-service
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: timetable-service-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-timetable/target
          name: timetable-service-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: train-db
    name: train-db
  spec:
    selector:
      matchLabels:
        io.kompose.service: train-db
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: train-db
      spec:
        containers:
        - image: mongo
          name: train-db
          resources: {}
        restartPolicy: Always
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: train-service
    name: train-service
  spec:
    selector:
      matchLabels:
        io.kompose.service: train-service
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: train-service
      spec:
        containers:
        - image: gilliswerrebrouck/railway-app-train-service
          name: train-service
          resources: {}
          volumeMounts:
          - mountPath: /app
            name: train-service-hostpath0
        restartPolicy: Always
        volumes:
        - hostPath:
            path: /users/gillis/Railway-System-Architecture/users/gillis/Railway-System-Architecture/railway-app-train/target
          name: train-service-hostpath0
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
        kubernetes-deployment.yaml
      kompose.version: 1.20.0 (f3d54d784)
    creationTimestamp: null
    labels:
      io.kompose.service: zookeeper-container
    name: zookeeper-container
  spec:
    selector:
      matchLabels:
        io.kompose.service: zookeeper-container
    replicas: 1
    strategy: {}
    template:
      metadata:
        annotations:
          kompose.cmd: kompose convert -f docker-compose.yaml --volumes hostPath --out
            kubernetes-deployment.yaml
          kompose.version: 1.20.0 (f3d54d784)
        creationTimestamp: null
        labels:
          io.kompose.service: zookeeper-container
      spec:
        containers:
        - env:
          - name: ZOOKEEPER_CLIENT_PORT
            value: "2181"
          image: confluentinc/cp-zookeeper
          name: zookeeper-container
          resources: {}
        restartPolicy: Always
  status: {}
kind: List
metadata: {}
